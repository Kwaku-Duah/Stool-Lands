openapi: 3.0.0
info:
  version: 1.0.0
  title: Your API Title
  description: Your API Description

paths:
  /auth/signup:
    post:
      summary: Sign up a new user
      description: Registers a new user with the provided name, email, phone number, occupation, password, and confirmPassword.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the new user.
                email:
                  type: string
                  format: email
                  description: The email address of the new user (optional).
                phoneNumber:
                  type: string
                  description: The phone number of the new user.
                occupation:
                  type: string
                  description: The occupation of the new user.
                newPassword:
                  type: string
                  description: The new password for the new user.
                confirmPassword:
                  type: string
                  description: The confirmation of the new password for the new user.
      responses:
        '200':
          description: Successful registration
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Confirmation message of successful signup.
        '400':
          description: Bad request or validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing the issue.
      security: []

/auth/login:
  post:
    summary: Log in a user
    description: Logs in a user with the provided email or phone number and password.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              emailOrPhone:
                type: string
                description: The email or phone number of the user.
              password:
                type: string
                description: The password of the user.
    responses:
      '200':
        description: Successful login
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  description: The user object with sensitive information removed.
                  properties:
                    id:
                      type: integer
                      description: The unique identifier of the user.
                    username:
                      type: string
                      description: The username of the user.
                    email:
                      type: string
                      format: email
                      description: The email address of the user.
                    phoneNumber:
                      type: string
                      description: The phone number of the user.
                    role:
                      type: string
                      description: The role of the user.
                token:
                  type: string
                  description: The JWT token for the authenticated user.
                expiration:
                  type: string
                  description: The expiration time of the JWT token.
      '400':
        description: Bad request or validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Error message describing the issue.

/auth/logout:
  post:
    summary: Log out a user
    description: Logs out a user by removing the JWT token from the local storage.
    responses:
      '200':
        description: Successful logout
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Confirmation message of successful logout.
      '400':
        description: Bad request or unexpected error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Error message describing the issue.

/password/forgot:
  post:
    summary: Send password reset link
    description: Sends a password reset link to the provided email address.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
                description: The email address of the user requesting a password reset.
    responses:
      '200':
        description: Password reset link sent successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Confirmation message that the password reset link has been sent to the user's email.
                link:
                  type: string
                  description: The generated password reset link.
      '400':
        description: Bad request or validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Error message describing the issue.

/password/reset:
  post:
    summary: Reset user password
    description: Resets the password for a user identified by their userId.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              userId:
                type: integer
                description: The ID of the user whose password will be reset.
              newPassword:
                type: string
                description: The new password for the user.
              confirmPassword:
                type: string
                description: The confirmation of the new password for the user.
    responses:
      '200':
        description: Password changed successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Confirmation message that the password has been changed successfully.
                success:
                  type: boolean
                  description: Indicates whether the password change was successful.
      '400':
        description: Bad request or validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Error message describing the issue.
/password/otp-send:
  post:
    summary: Send OTP for password reset
    description: Sends a one-time password (OTP) to the provided phone number for password reset.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              phoneNumber:
                type: string
                description: The phone number of the user requesting a password reset OTP.
    responses:
      '200':
        description: OTP sent successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Confirmation message that the OTP has been sent to the user's phone.
      '400':
        description: Bad request or validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Error message describing the issue.

/password/otp-verify:
  post:
    summary: Verify OTP for password reset
    description: Verifies the one-time password (OTP) provided for password reset.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              requestId:
                type: string
                description: The ID of the OTP request.
              prefix:
                type: string
                description: The prefix of the OTP (e.g.phone number).
              code:
                type: string
                description: The OTP code to be verified.
    responses:
      '200':
        description: OTP verified successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  description: Indicates whether the OTP verification was successful.
                message:
                  type: string
                  description: Confirmation message that the OTP has been verified successfully.
      '400':
        description: Bad request or validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  description: Indicates whether the OTP verification was successful.
                message:
                  type: string
                  description: Error message describing the issue.

/password/resend-otp:
  post:
    summary: Resend OTP for password reset
    description: Resends the one-time password (OTP) for password reset.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              requestId:
                type: string
                description: The ID of the OTP request to be resent.
    responses:
      '200':
        description: OTP resent successfully
        content:
          application/json:
            schema:
              type: object
              description: Response containing information about the resent OTP.
      '400':
        description: Bad request or validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Error message describing the issue.

