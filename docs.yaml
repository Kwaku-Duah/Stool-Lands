openapi: 3.0.0
info:
  version: 1.0.0
  title: Your API Title
  description: Your API Description

paths:
  /auth/signup:
    post:
      summary: Sign up a new user
      description: Registers a new user with the provided username, email, password, and phone number.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username of the new user.
                email:
                  type: string
                  format: email
                  description: The email address of the new user.
                password:
                  type: string
                  description: The password of the new user.
                phoneNumber:
                  type: string
                  description: The phone number of the new user.
      responses:
        '200':
          description: Successful registration
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The unique identifier of the user.
                      username:
                        type: string
                        description: The username of the user.
                      email:
                        type: string
                        format: email
                        description: The email address of the user.
                      phoneNumber:
                        type: string
                        description: The phone number of the user.
                      role:
                        type: string
                        description: The role of the user.
                  token:
                    type: string
                    description: The JWT token for the authenticated user.
        '400':
          description: Bad request or validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing the issue.
      security: []
/auth/login:
  post:
    summary: User login
    description: Authenticates a user with the provided email or phone number and password.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              emailOrPhone:
                type: string
                description: The email or phone number of the user.
              password:
                type: string
                description: The password of the user.
    responses:
      '200':
        description: Successful login
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The unique identifier of the user.
                    username:
                      type: string
                      description: The username of the user.
                    email:
                      type: string
                      format: email
                      description: The email address of the user.
                    phoneNumber:
                      type: string
                      description: The phone number of the user.
                    role:
                      type: string
                      description: The role of the user.
                    changePassword:
                      type: boolean
                      description: Indicates whether the user needs to change their password.
                token:
                  type: string
                  description: The JWT token for the authenticated user.
                expirationTime:
                  type: integer
                  description: The expiration time of the JWT token in milliseconds.
      '400':
        description: Bad request or authentication error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Error message describing the issue.
    security: []
/auth/logout:
  post:
    summary: User logout
    description: Clears the authentication token (JWT) from local storage, effectively logging out the user.
    responses:
      '200':
        description: Successful logout
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Message indicating successful logout.
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Error message indicating the reason for the failure.

/password/forgot:
  post:
    summary: Forgot password
    description: Sends a password reset link to the user's email address.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
                description: The email address of the user requesting a password reset.
    responses:
      '200':
        description: Password reset link sent successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Message indicating that the password reset link has been sent to the user's email.
                link:
                  type: string
                  description: The password reset link sent to the user's email address.
      '400':
        description: Bad request or validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Error message describing the issue.

/password/reset:
  post:
    summary: Reset password
    description: Resets the user's password with the provided new password.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              userId:
                type: integer
                description: The ID of the user whose password is being reset.
              newPassword:
                type: string
                description: The new password for the user.
              confirmPassword:
                type: string
                description: The confirmation of the new password.
    responses:
      '200':
        description: Password reset successful
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Message indicating that the password has been reset successfully.
                success:
                  type: boolean
                  description: Indicates whether the password reset was successful.
      '400':
        description: Bad request or validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Error message describing the issue.

