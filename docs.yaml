openapi: 3.0.0
info:
  version: 1.0.0
  title: Your API Title
  description: Your API Description

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT  # Optional, specify the format of the bearer token if needed

security:
  - bearerAuth: []  # Apply the bearerAuth security scheme globally
paths:
  /auth/signup:
    post:
      summary: Sign up a new user
      description: Registers a new user with the provided name, email, phone number, occupation, password, and confirmPassword.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the new user.
                email:
                  type: string
                  format: email
                  description: The email address of the new user (optional).
                phoneNumber:
                  type: string
                  description: The phone number of the new user.
                occupation:
                  type: string
                  description: The occupation of the new user.
                newPassword:
                  type: string
                  description: The new password for the new user.
                confirmPassword:
                  type: string
                  description: The confirmation of the new password for the new user.
      responses:
        '200':
          description: Successful registration
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Confirmation message of successful signup.
        '400':
          description: Bad request or validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message describing the issue.
        '409':
          description: Conflict - Email or phone number already registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating that the email or phone number is already registered.
        '422':
          description: Unprocessable Entity - Validation error for password requirements
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating password validation failure.

/auth/login:
  post:
    summary: Log in a user
    description: Logs in a user with the provided email or phone number and password.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              emailOrPhone:
                type: string
                description: The email or phone number of the user.
              password:
                type: string
                description: The password of the user.
    responses:
      '200':
        description: Successful login
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  description: The user object with sensitive information removed.
                  properties:
                    id:
                      type: integer
                      description: The unique identifier of the user.
                    username:
                      type: string
                      description: The username of the user.
                    email:
                      type: string
                      format: email
                      description: The email address of the user.
                    phoneNumber:
                      type: string
                      description: The phone number of the user.
                    role:
                      type: string
                      description: The role of the user.
                token:
                  type: string
                  description: The JWT token for the authenticated user.
                expiration:
                  type: string
                  description: The expiration time of the JWT token.
      '400':
        description: Bad request or validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message describing the issue.
      '401':
        description: Unauthorized - Invalid email or password
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message indicating invalid email or password.

/auth/logout:
  post:
    summary: Log out a user
    description: Logs out a user by removing the JWT token from the local storage.
    responses:
      '200':
        description: Successful logout
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Confirmation message of successful logout.
      '400':
        description: Bad request or unexpected error
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message describing the issue.


/password/forgot:
  post:
    summary: Send password reset link
    description: Sends a password reset link to the provided email address.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
                description: The email address of the user requesting a password reset.
    responses:
      '200':
        description: Password reset link sent successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Confirmation message that the password reset link has been sent to the user's email.
                link:
                  type: string
                  description: The generated password reset link.
      '400':
        description: Bad request or validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Error message describing the issue.

/password/reset:
  post:
    summary: Reset user password
    description: Resets the password for a user identified by their userId.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              userId:
                type: integer
                description: The ID of the user whose password will be reset.
              newPassword:
                type: string
                description: The new password for the user.
              confirmPassword:
                type: string
                description: The confirmation of the new password for the user.
    responses:
      '200':
        description: Password changed successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Confirmation message that the password has been changed successfully.
                success:
                  type: boolean
                  description: Indicates whether the password change was successful.
      '400':
        description: Bad request or validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Error message describing the issue.

                  
/password/otp-send:
  post:
    summary: Send OTP for password reset
    description: Sends a one-time password (OTP) to the provided phone number for password reset.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              phoneNumber:
                type: string
                description: The phone number of the user requesting a password reset OTP.
    responses:
      '200':
        description: OTP sent successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Confirmation message that the OTP has been sent to the user's phone.
      '400':
        description: Bad request or validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Error message describing the issue.

/password/otp-verify:
  post:
    summary: Verify OTP for password reset
    description: Verifies the one-time password (OTP) provided for password reset.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              requestId:
                type: string
                description: The ID of the OTP request.
              prefix:
                type: string
                description: The prefix of the OTP (e.g.phone number).
              code:
                type: string
                description: The OTP code to be verified.
    responses:
      '200':
        description: OTP verified successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  description: Indicates whether the OTP verification was successful.
                message:
                  type: string
                  description: Confirmation message that the OTP has been verified successfully.
      '400':
        description: Bad request or validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  description: Indicates whether the OTP verification was successful.
                message:
                  type: string
                  description: Error message describing the issue.

/password/resend-otp:
  post:
    summary: Resend OTP for password reset
    description: Resends the one-time password (OTP) for password reset.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              requestId:
                type: string
                description: The ID of the OTP request to be resent.
    responses:
      '200':
        description: OTP resent successfully
        content:
          application/json:
            schema:
              type: object
              description: Response containing information about the resent OTP.
      '400':
        description: Bad request or validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Error message describing the issue.

/add/secretary:
  post:
    summary: Create a new secretary
    description: Creates a new secretary with the provided details.
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The name of the secretary.
              email:
                type: string
                format: email
                description: The email address of the secretary.
              phoneNumber:
                type: string
                description: The phone number of the secretary.
    responses:
      '201':
        description: Secretary created successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Success message indicating the secretary creation.
                secretary:
                  type: object
                  description: Details of the created secretary.
      '400':
        description: Bad request or validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message describing the issue.
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message indicating user is not authorized to perform this action.
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message indicating the internal server error. 



/add/inspector:
  post:
    summary: Create a new inspector
    description: Create a new inspector with the provided information.
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The name of the inspector.
              email:
                type: string
                format: email
                description: The email address of the inspector.
              phoneNumber:
                type: string
                description: The phone number of the inspector.
    responses:
      '201':
        description: Inspector created successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: A success message indicating that the inspector was created successfully.
                inspector:
                  type: object
                  description: Information about the newly created inspector.
      '400':
        description: Bad request or validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message describing the issue.
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message indicating user is not authorized to perform this action.
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message indicating an internal server error occurred.



/add/chief:
  post:
    summary: Create a new chief, requires authorisation of admin to create a chief
    description: Create a new chief with the provided information.
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The name of the chief.
              email:
                type: string
                format: email
                description: The email address of the chief.
              phoneNumber:
                type: string
                description: The phone number of the chief.
    responses:
      '201':
        description: Chief created successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: A success message indicating that the chief was created successfully.
                chief:
                  type: object
                  description: Information about the newly created chief.
      '400':
        description: Bad request or validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message describing the issue.
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message indicating user is not authorized to perform this action.
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message indicating an internal server error occurred.



/transaction/callback:
  post:
    summary: Handle payment callback.
    description: Endpoint to handle payment callback requests.
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              ResponseCode:
                type: string
                description: The response code from the payment provider.
              Status:
                type: string
                description: The status of the payment.
              Data:
                type: object
                description: Additional data associated with the payment callback.
    responses:
      '200':
        description: Payment callback received successfully.
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  description: Indicates whether the payment callback was successful.
                message:
                  type: string
                  description: A success message indicating that the payment callback was received successfully.
      '500':
        description: Internal Server Error.
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message indicating an internal server error occurred.


/transaction/state:
  post:
    summary: Check transaction status using client reference to inspect whether an instant transaction was a success/failure
    description: Endpoint to check the status of a transaction using its client reference.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              clientReference:
                type: string
                description: The client reference of the transaction to check.
    security:
      - basicAuth: []
    responses:
      '200':
        description: Success
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  description: Indicates whether the transaction status was successfully retrieved.
                transactionStatus:
                  type: string
                  description: The status of the transaction.
      '400':
        description: Invalid transaction status
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  description: Indicates that the transaction status is invalid.
                message:
                  type: string
                  description: Error message indicating the transaction status is invalid.
      '404':
        description: Failed to find transaction
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  description: Indicates that the transaction could not be found.
                message:
                  type: string
                  description: Error message indicating the transaction could not be found.
      '500':
        description: Internal Server Error
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  description: Indicates whether an internal server error occurred.
                message:
                  type: string
                  description: Error message indicating an internal server error occurred.
    securitySchemes:
      basicAuth:
        type: http
        scheme: basic




/new/apply:
  post:
    summary: Fill application form
    description: Submit an application form with required documents
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              applicantName:
                type: string
              applicantDOB:
                type: array
                items:
                  type: string
                  format: date-time
              mailingAddress:
                type: string
              contactNumber:
                type: string
              emailAddress:
                type: string
                format: email
              placeOfResidence:
                type: string
              hometown:
                type: string
              maritalStatus:
                type: string
              nextOfKin:
                type: string
              landLocality:
                type: string
              siteName:
                type: string
              plotNumbers:
                type: string
              totalLandSize:
                type: string
              streetName:
                type: string
              landTransferor:
                type: string
              dateOfOriginalTransfer:
                type: string
                format: date
              purposeOfLand:
                type: string
              contactOfTransferor:
                type: string
              documents:
                type: array
                items:
                  type: string
                  format: binary
    security:
      - bearerAuth: [] 
    responses:
      '201':
        description: Application submitted successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                application:
                  type: object
                  properties:
                    uniqueFormID:
                      type: string
                    applicantName:
                      type: string
                    applicantDOB:
                      type: array
                      items:
                        type: array
                        format: date-time
                    mailingAddress:
                      type: string
                    contactNumber:
                      type: string
                    emailAddress:
                      type: string
                      format: email
                    placeOfResidence:
                      type: string
                    hometown:
                      type: string
                    maritalStatus:
                      type: string
                    nextOfKin:
                      type: string
                    landLocality:
                      type: string
                    siteName:
                      type: string
                    plotNumbers:
                      type: string
                    totalLandSize:
                      type: string
                    streetName:
                      type: string
                    landTransferor:
                      type: string
                    dateOfOriginalTransfer:
                      type: string
                      format: date
                    purposeOfLand:
                      type: string
                    contactOfTransferor:
                      type: string
                    type:
                      type: string
                    formStatus:
                      type: string
                    status:
                      type: string
      '400':
        description: No documents uploaded or bad request
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
      '401':
        description: User not authenticated
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      '404':
        description: No unused stateForm found for the user
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      '500':
        description: An error occurred while processing the request
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string



/new/applications:
  get:
    summary: Get forms created by the authenticated user with relevant information.
    description: Retrieve all forms created by the authenticated user with relevant details.
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Forms retrieved successfully.
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  description: Indicates whether the operation was successful.
                forms:
                  type: array
                  items:
                    type: object
                    properties:
                      uniqueFormID:
                        type: string
                        description: Unique ID of the application form.
                      applicantName:
                        type: string
                        description: Name of the applicant.
                      applicantDOB:
                        type: string
                        format: date
                        description: Date of birth of the applicant.
                      mailingAddress:
                        type: string
                        description: Mailing address of the applicant.
                      contactNumber:
                        type: string
                        description: Contact number of the applicant.
                      emailAddress:
                        type: string
                        format: email
                        description: Email address of the applicant.
                      placeOfResidence:
                        type: string
                        description: Place of residence of the applicant.
                      hometown:
                        type: string
                        description: Hometown of the applicant.
                      maritalStatus:
                        type: string
                        description: Marital status of the applicant.
                      nextOfKin:
                        type: string
                        description: Next of kin of the applicant.
                      landLocality:
                        type: string
                        description: Locality of the land.
                      siteName:
                        type: string
                        description: Name of the site.
                      plotNumbers:
                        type: string
                        description: Plot numbers.
                      totalLandSize:
                        type: number
                        description: Total land size.
                      streetName:
                        type: string
                        description: Name of the street.
                      landTransferor:
                        type: string
                        description: Name of the land transferor.
                      dateOfOriginalTransfer:
                        type: string
                        format: date
                        description: Date of original land transfer.
                      purposeOfLand:
                        type: string
                        description: Purpose of the land.
                      contactOfTransferor:
                        type: string
                        description: Contact of the land transferor.
                      documents:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              description: Type of the document.
                            image:
                              type: string
                              format: uri
                              description: URL of the document image.
                        description: Array of documents uploaded.
      '401':
        description: User not authenticated.
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  description: Indicates whether the operation was successful.
                message:
                  type: string
                  description: Error message indicating the user is not authenticated.
      '404':
        description: No unused forms found for the user.
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  description: Indicates whether the operation was successful.
                message:
                  type: string
                  description: Error message indicating no unused forms were found for the user.
      '500':
        description: Internal Server Error.
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  description: Indicates whether the operation was successful.
                error:
                  type: string
                  description: Error message indicating an internal server error occurred.



/new/org-apply:
  post:
    summary: Submit organization application form
    description: Submit an organization application form for land registration.
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              organisationName:
                type: string
                description: Name of the organization.
              location:
                type: string
                description: Location of the organization.
              mailingAddress:
                type: string
                description: Mailing address of the organization.
              contactNumber:
                type: string
                description: Contact number of the organization.
              emailAddress:
                type: string
                format: email
                description: Email address of the organization.
              organizationLogo:
                type: string
                format: binary
                description: Logo of the organization.
              landLocality:
                type: string
                description: Locality of the land.
              siteName:
                type: string
                description: Name of the site.
              plotNumbers:
                type: string
                description: Plot numbers.
              totalLandSize:
                type: number
                description: Total land size.
              streetName:
                type: string
                description: Name of the street.
              landTransferor:
                type: string
                description: Name of the land transferor.
              dateOfOriginalTransfer:
                type: string
                format: date
                description: Date of original land transfer.
              purposeOfLand:
                type: string
                description: Purpose of the land.
              contactOfTransferor:
                type: string
                description: Contact of the land transferor.
              documents:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      description: Type of the document.
                    image:
                      type: string
                      format: uri
                      description: URL of the document image.
                description: Array of documents uploaded.
    responses:
      '201':
        description: Organization form submitted successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Success message indicating the form submission.
                organizationForm:
                  type: object
                  description: Details of the submitted organization form.
                  properties:
                    uniqueFormID:
                      type: string
                      description: Unique ID of the organization form.
                    organisationName:
                      type: string
                      description: Name of the organization.
                    location:
                      type: string
                      description: Location of the organization.
                    mailingAddress:
                      type: string
                      description: Mailing address of the organization.
                    contactNumber:
                      type: string
                      description: Contact number of the organization.
                    emailAddress:
                      type: string
                      format: email
                      description: Email address of the organization.
                    landLocality:
                      type: string
                      description: Locality of the land.
                    siteName:
                      type: string
                      description: Name of the site.
                    plotNumbers:
                      type: string
                      description: Plot numbers.
                    totalLandSize:
                      type: number
                      description: Total land size.
                    streetName:
                      type: string
                      description: Name of the street.
                    landTransferor:
                      type: string
                      description: Name of the land transferor.
                    dateOfOriginalTransfer:
                      type: string
                      format: date
                      description: Date of original land transfer.
                    purposeOfLand:
                      type: string
                      description: Purpose of the land.
                    contactOfTransferor:
                      type: string
                      description: Contact of the land transferor.
                    documents:
                      type: array
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                            description: Type of the document.
                          image:
                            type: string
                            format: uri
                            description: URL of the document image.
                      description: Array of documents uploaded.
      '401':
        description: User not authenticated
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Error message indicating user is not authenticated.
      '500':
        description: Internal Server Error
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message indicating an internal server error occurred.




/new/joint-apply:
  post:
    summary: Submit joint application form
    description: Submit a joint application form for land registration.
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              applicants:
                type: array
                items:
                  type: object
                  properties:
                    applicantName:
                      type: string
                      description: Name of the applicant.
                    applicantDOB:
                      type: string
                      format: date
                      description: Date of birth of the applicant.
                    mailingAddress:
                      type: string
                      description: Mailing address of the applicant.
                    contactNumber:
                      type: string
                      description: Contact number of the applicant.
                    emailAddress:
                      type: string
                      format: email
                      description: Email address of the applicant.
                    placeOfResidence:
                      type: string
                      description: Place of residence of the applicant.
                    hometown:
                      type: string
                      description: Hometown of the applicant.
                    nextOfKin:
                      type: string
                      description: Next of kin of the applicant.
                    maritalStatus:
                      type: string
                      description: Marital status of the applicant.
                description: Array of applicant details.
              landDetails:
                type: object
                properties:
                  landLocality:
                    type: string
                    description: Locality of the land.
                  siteName:
                    type: string
                    description: Name of the site.
                  plotNumbers:
                    type: string
                    description: Plot numbers.
                  totalLandSize:
                    type: number
                    description: Total land size.
                  streetName:
                    type: string
                    description: Name of the street.
                  landTransferor:
                    type: string
                    description: Name of the land transferor.
                  dateOfOriginalTransfer:
                    type: string
                    format: date
                    description: Date of original land transfer.
                  purposeOfLand:
                    type: string
                    description: Purpose of the land.
                  contactOfTransferor:
                    type: string
                    description: Contact of the land transferor.
                description: Details of the land.
              documents:
                type: array
                items:
                  type: string
                  format: binary
                description: Array of documents uploaded.
    responses:
      '201':
        description: Application submitted successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Success message indicating the form submission.
                application:
                  type: object
                  description: Details of the submitted application form.
                  properties:
                    uniqueFormID:
                      type: string
                      description: Unique ID of the application form.
                    applicantName:
                      type: string
                      description: Name of the applicants.
                    applicantDOB:
                      type: array
                      items:
                        type: string
                      description: Dates of birth of the applicants.
                    mailingAddress:
                      type: string
                      description: Mailing addresses of the applicants.
                    contactNumber:
                      type: string
                      description: Contact numbers of the applicants.
                    emailAddress:
                      type: string
                      format: email
                      description: Email addresses of the applicants.
                    placeOfResidence:
                      type: string
                      description: Places of residence of the applicants.
                    hometown:
                      type: string
                      description: Hometowns of the applicants.
                    nextOfKin:
                      type: string
                      description: Next of kins of the applicants.
                    maritalStatus:
                      type: string
                      description: Marital statuses of the applicants.
                    landLocality:
                      type: string
                      description: Locality of the land.
                    siteName:
                      type: string
                      description: Name of the site.
                    plotNumbers:
                      type: string
                      description: Plot numbers.
                    totalLandSize:
                      type: number
                      description: Total land size.
                    streetName:
                      type: string
                      description: Name of the street.
                    landTransferor:
                      type: string
                      description: Name of the land transferor.
                    dateOfOriginalTransfer:
                      type: string
                      format: date
                      description: Date of original land transfer.
                    purposeOfLand:
                      type: string
                      description: Purpose of the land.
                    contactOfTransferor:
                      type: string
                      description: Contact of the land transferor.
      '401':
        description: User not authenticated
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Error message indicating user is not authenticated.
      '500':
        description: Internal Server Error
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message indicating an internal server error occurred.




/new/report:
  post:
    summary: Create a new report
    description: Create a new report for issues encountered.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
                description: Email address of the reporter.
              issue:
                type: string
                description: Description of the issue.
              priority:
                type: string
                description: Priority level of the issue.
              description:
                type: string
                description: Detailed description of the issue.
    responses:
      '201':
        description: Report created successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Success message indicating the report creation.
                report:
                  type: object
                  description: Details of the created report.
                  properties:
                    id:
                      type: integer
                      description: Unique ID of the report.
                    email:
                      type: string
                      format: email
                      description: Email address of the reporter.
                    issue:
                      type: string
                      description: Description of the issue.
                    priority:
                      type: string
                      description: Priority level of the issue.
                    description:
                      type: string
                      description: Detailed description of the issue.
                    createdAt:
                      type: string
                      format: date-time
                      description: Date and time when the report was created.
      '400':
        description: Bad request or validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Error message indicating missing or invalid fields.
      '500':
        description: Internal Server Error
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message indicating an internal server error occurred.



/pay/transactions:
  post:
    summary: Create a new transaction for payment.
    description: Create a new transaction for processing payments.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              serviceId:
                type: string
                description: The ID of the payable service.
              customerName:
                type: string
                description: Name of the customer making the payment.
              phoneNumber:
                type: string
                description: Phone number of the customer.
    responses:
      '200':
        description: Transaction created successfully.
        content:
          application/json:
            schema:
              type: object
              properties:
                response_data:
                  type: string
                  description: Response data from the payment provider.
      '400':
        description: Bad request or validation error.
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message indicating missing or invalid fields or service not found.
      '401':
        description: Unauthorized.
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message indicating user is not authenticated.
      '500':
        description: Internal Server Error.
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message indicating an internal server error occurred.
    security:
      - bearerAuth: []


/new/issue:
    post:
      summary: Create a new support ticket
      description: Endpoint to create a new support ticket by providing necessary details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email address of the user.
                  example: user@example.com
                issue:
                  type: string
                  description: A brief description of the issue.
                  example: "Unable to login"
                appNumber:
                  type: string
                  description: Application number related to the issue.
                  example: "APP123456"
                priority:
                  type: string
                  description: Priority of the issue (e.g., low, medium, high).
                  example: "high"
                description:
                  type: string
                  description: Detailed description of the issue.
                  example: "User is unable to login despite entering correct credentials."
              required:
                - email
                - issue
                - appNumber
                - priority
                - description
      responses:
        '201':
          description: Successfully created the ticket.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Your issue has been successfully raised"
                  ticket:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: ID of the created ticket.
                        example: 1
                      email:
                        type: string
                        example: user@example.com
                      issue:
                        type: string
                        example: "Unable to login"
                      appNumber:
                        type: string
                        example: "APP123456"
                      priority:
                        type: string
                        example: "high"
                      description:
                        type: string
                        example: "User is unable to login despite entering correct credentials."
        '400':
          description: Bad request. Missing required fields.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "All fields are required"
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred while processing your request"


/all/forms:
  get:
    summary: Get all forms
    description: Fetches all application, organization, and state forms.
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Successfully fetched forms
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                forms:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                      userId:
                        type: string
                      documents:
                        type: array
                        items:
                          type: object
                      serviceId:
                        type: string
      '401':
        description: Unauthorized - No token provided or invalid token
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: No token provided
      '403':
        description: Forbidden - Insufficient privileges
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: Insufficient Privileges
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: Internal Server Error

/all/users:
  get:
    summary: Get all users
    description: Fetches all users including their name, email, phone number, role, and active status.
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Successfully fetched users
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        example: John Doe
                      email:
                        type: string
                        example: johndoe@example.com
                      phoneNumber:
                        type: string
                        example: 123-456-7890
                      role:
                        type: string
                        example: ADMIN
                      activeStatus:
                        type: string
                        example: Active
      '401':
        description: Unauthorized - No token provided or invalid token
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                error:
                  type: string
                  example: No token provided or invalid token
      '403':
        description: Forbidden - Insufficient privileges
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                error:
                  type: string
                  example: Insufficient privileges
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                error:
                  type: string
                  example: An error occurred while fetching users
/all/{userid}:
  get:
    summary: Get specific forms for a user
    parameters:
      - in: path
        name: userid
        required: true
        schema:
          type: integer
          format: int64
        description: The ID of the user
    security:
      - Admin: []
      - Secretary: []
    responses:
      '200':
        description: Successful operation
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                forms:
                  type: array
                  items:
                    # Define your schema for forms here
      '400':
        description: Bad request
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                error:
                  type: string
                  example: User ID must be a number
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                error:
                  type: string
                  example: Unauthorized access
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                error:
                  type: string
                  example: An error occurred while processing your request






/all/user-del:
  post:
    summary: Delete a user
    description: Deletes a user by setting their details to null and activeStatus to false. Cannot delete admin or secretary users.
    tags:
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              userId:
                type: integer
                description: The ID of the user to delete
                example: 123
    responses:
      '200':
        description: User nullified successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: User nullified successfully
                nullifiedUser:
                  type: object
                  description: Details of the nullified user
                  properties:
                    id:
                      type: integer
                      example: 123
                    name:
                      type: string
                      example: John Doe
                    email:
                      type: string
                      example: johndoe@example.com
                    phoneNumber:
                      type: string
                      example: '1234567890'
                    occupation:
                      type: string
                      example: Developer
                    role:
                      type: string
                      example: null
                    activeStatus:
                      type: boolean
                      example: false
      '400':
        description: User ID is required
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: User ID is required
      '403':
        description: Cannot delete an admin or secretary user
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: Cannot delete an admin or secretary user
      '404':
        description: User not found
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: User not found
      '500':
        description: An error occurred while processing your request
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: An error occurred while processing your request


/all/user-deactivate:
  post:
    summary: Deactivate a user
    description: Deactivates a user by setting their activeStatus to false. Cannot deactivate admin or secretary users.
    tags:
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              userId:
                type: integer
                description: The ID of the user to deactivate
                example: 123
    responses:
      '200':
        description: User deactivated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: User deactivated successfully
                user:
                  type: object
                  description: Details of the deactivated user
                  properties:
                    id:
                      type: integer
                      example: 123
                    name:
                      type: string
                      example: John Doe
                    email:
                      type: string
                      example: johndoe@example.com
                    phoneNumber:
                      type: string
                      example: '1234567890'
                    occupation:
                      type: string
                      example: Developer
                    role:
                      type: string
                      example: USER
                    activeStatus:
                      type: boolean
                      example: false
      '400':
        description: Authenticated user required
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: Authenticated user required
      '403':
        description: Cannot deactivate an admin or secretary user
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: Cannot delete an admin or secretary user
      '404':
        description: User not found
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: User not found
      '500':
        description: An error occurred while processing your request
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: An error occurred while processing your request




/ins/assign:
  post:
    summary: Assign an inspector to a form
    description: Assigns an inspector to a form (either an Application or OrganizationForm) based on the provided uniqueFormID. Ensures that the user is authenticated and is a secretary, and that the form and inspector exist.
    tags:
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              uniqueFormID:
                type: string
                example: form123
              email:
                type: string
                example: inspector@example.com
    responses:
      '200':
        description: Form assigned successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: Form assigned successfully
                invitation:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    assignmentId:
                      type: string
                      example: form123
                    inspectors:
                      type: array
                      items:
                        type: object
                        properties:
                          inspectorId:
                            type: string
                            example: inspector123
                assignedForm:
                  type: object
                  properties:
                    uniqueFormID:
                      type: string
                      example: form123
                    name:
                      type: string
                      example: Example Form
      '401':
        description: User not authenticated
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: User not authenticated
      '403':
        description: User is not an inspector
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: User is not an inspector
      '404':
        description: User, Secretary, or Form not found
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: User, Secretary, or Form not found
      '500':
        description: An error occurred while processing your request
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: An error occurred while processing your request

/ins/all:
  get:
    summary: Get all forms assigned to the authenticated inspector
    description: Retrieves all forms (either Application or OrganizationForm) assigned to the currently authenticated inspector based on their invitations.
  
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Forms retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                forms:
                  type: array
                  items:
                    type: object
                    properties:
                      uniqueFormID:
                        type: string
                        example: form123
                      name:
                        type: string
                        example: Example Form
      '401':
        description: User not authenticated
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: User not authenticated
      '404':
        description: User or Inspector not found
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: User or Inspector not found
      '500':
        description: An error occurred while processing your request
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: An error occurred while processing your request
